{"name": "test_create_leave_type_and_assign_entitlement", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0xe2fea3+66515]\n\tGetHandleVerifier [0x0xe2fee4+66580]\n\t(No symbol) [0x0xc1dc48]\n\t(No symbol) [0x0xc68704]\n\t(No symbol) [0x0xc68aab]\n\t(No symbol) [0x0xcaf482]\n\t(No symbol) [0x0xc8b214]\n\t(No symbol) [0x0xcacba7]\n\t(No symbol) [0x0xc8afc6]\n\t(No symbol) [0x0xc5c2ca]\n\t(No symbol) [0x0xc5d154]\n\tGetHandleVerifier [0x0x10873d3+2521347]\n\tGetHandleVerifier [0x0x1082353+2500739]\n\tGetHandleVerifier [0x0xe57cf4+229924]\n\tGetHandleVerifier [0x0xe48258+165768]\n\tGetHandleVerifier [0x0xe4ed0d+193085]\n\tGetHandleVerifier [0x0xe381b8+100072]\n\tGetHandleVerifier [0x0xe38350+100480]\n\tGetHandleVerifier [0x0xe2260a+11066]\n\tBaseThreadInitThunk [0x0x76307ba9+25]\n\tRtlInitializeExceptionChain [0x0x7788c2eb+107]\n\tRtlClearBits [0x0x7788c26f+191]", "trace": "self = <tests.Leave.test_admin_create_leave.TestAdminLeave object at 0x00000221652AB250>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"db8fde8b4e4afbc0ce293b93be3af12a\")>\n\n    def test_create_leave_type_and_assign_entitlement(self, driver):\n        login = LoginPage(driver)\n        leave_admin = LeaveAdminPage(driver)\n    \n        # Step 1: Login as Admin\n        logger.info(\"Starting test: Create Leave Type and Assign Entitlement\")\n        logger.info(f\"Logging in as Admin: {Config.USERNAME}\")\n        login.login(Config.USERNAME, Config.PASSWORD)\n        logger.info(\"Login successful.\")\n    \n        # Step 2: Navigate & Add Leave Type\n        logger.info(\"Navigating to Leave Types page.\")\n        leave_admin.navigate_to_leave_types()\n        logger.info(\"Adding new leave type: 'happy Leave'\")\n>       toast_message = leave_admin.add_leave_type(\"happy Leave\")\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\Leave\\test_admin_create_leave.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\leave_admin_page.py:66: in add_leave_type\n    toast_text = self.wait.until(EC.visibility_of_element_located(self.SUCCESS_TOAST)).text\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"db8fde8b4e4afbc0ce293b93be3af12a\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000022165368A40>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0xe2fea3+66515]\nE       \tGetHandleVerifier [0x0xe2fee4+66580]\nE       \t(No symbol) [0x0xc1dc48]\nE       \t(No symbol) [0x0xc68704]\nE       \t(No symbol) [0x0xc68aab]\nE       \t(No symbol) [0x0xcaf482]\nE       \t(No symbol) [0x0xc8b214]\nE       \t(No symbol) [0x0xcacba7]\nE       \t(No symbol) [0x0xc8afc6]\nE       \t(No symbol) [0x0xc5c2ca]\nE       \t(No symbol) [0x0xc5d154]\nE       \tGetHandleVerifier [0x0x10873d3+2521347]\nE       \tGetHandleVerifier [0x0x1082353+2500739]\nE       \tGetHandleVerifier [0x0xe57cf4+229924]\nE       \tGetHandleVerifier [0x0xe48258+165768]\nE       \tGetHandleVerifier [0x0xe4ed0d+193085]\nE       \tGetHandleVerifier [0x0xe381b8+100072]\nE       \tGetHandleVerifier [0x0xe38350+100480]\nE       \tGetHandleVerifier [0x0xe2260a+11066]\nE       \tBaseThreadInitThunk [0x0x76307ba9+25]\nE       \tRtlInitializeExceptionChain [0x0x7788c2eb+107]\nE       \tRtlClearBits [0x0x7788c26f+191]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "log", "source": "6b764277-289a-47e0-b949-475fd70e7847-attachment.txt", "type": "text/plain"}], "start": 1760337958532, "stop": 1760337981417, "uuid": "6525f908-e032-4517-b373-8de1ffa1b1f3", "historyId": "cb758ddbdf2cb78ddee60a0dbaffb300", "testCaseId": "cb758ddbdf2cb78ddee60a0dbaffb300", "fullName": "tests.Leave.test_admin_create_leave.TestAdminLeave#test_create_leave_type_and_assign_entitlement", "labels": [{"name": "parentSuite", "value": "tests.Leave"}, {"name": "suite", "value": "test_admin_create_leave"}, {"name": "subSuite", "value": "TestAdminLeave"}, {"name": "host", "value": "LAPTOP-AQ7JHBIL"}, {"name": "thread", "value": "2208-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Leave.test_admin_create_leave"}], "titlePath": ["tests", "Leave", "test_admin_create_leave.py", "TestAdminLeave"]}