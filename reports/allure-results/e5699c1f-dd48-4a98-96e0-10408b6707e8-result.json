{"name": "test_auto_generated_employee_id", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0xd2c333+65459]\n\tGetHandleVerifier [0x0xd2c374+65524]\n\t(No symbol) [0x0xb4d973]\n\t(No symbol) [0x0xb976e7]\n\t(No symbol) [0x0xb97a8b]\n\t(No symbol) [0x0xbddea2]\n\t(No symbol) [0x0xbb9e44]\n\t(No symbol) [0x0xbdb606]\n\t(No symbol) [0x0xbb9bf6]\n\t(No symbol) [0x0xb8b38e]\n\t(No symbol) [0x0xb8c274]\n\tGetHandleVerifier [0x0xfaeda3+2697763]\n\tGetHandleVerifier [0x0xfa9ec7+2677575]\n\tGetHandleVerifier [0x0xd54194+228884]\n\tGetHandleVerifier [0x0xd449f8+165496]\n\tGetHandleVerifier [0x0xd4b18d+192013]\n\tGetHandleVerifier [0x0xd347d8+99416]\n\tGetHandleVerifier [0x0xd34972+99826]\n\tGetHandleVerifier [0x0xd1ebea+10346]\n\tBaseThreadInitThunk [0x0x76307ba9+25]\n\tRtlInitializeExceptionChain [0x0x7788c2eb+107]\n\tRtlClearBits [0x0x7788c26f+191]", "trace": "self = <tests.PIM.test_auto_generated_employee_id.TestEmployeeAddition object at 0x00000216AF55F890>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4195fab27a0a240623aa351e2be4fab9\")>\n\n    def test_auto_generated_employee_id(self, driver):\n        print(\"\\n>>> Test: Verify Auto-Generated Employee ID\")\n    \n        # --- PAGE OBJECTS ---\n        login_page = LoginPage(driver)\n        dashboard_page = DashboardPage(driver)\n        pim_page = PIMPage(driver)\n        add_employee_page = AddEmployeePage(driver)\n    \n        # --- LOGIN ---\n        login_page.login(Config.USERNAME, Config.PASSWORD)\n        WebDriverWait(driver, 15).until(lambda d: dashboard_page.is_dashboard_displayed())\n        assert dashboard_page.is_dashboard_displayed(), \"⚠ Login failed\"\n    \n        # --- NAVIGATE TO ADD EMPLOYEE ---\n        dashboard_page.navigate_to_pim()\n        WebDriverWait(driver, 15).until(lambda d: pim_page.is_pim_page())\n        assert pim_page.is_pim_page(), \"⚠ Failed to navigate to PIM\"\n    \n        pim_page.navigate_to_add_employee()\n        WebDriverWait(driver, 15).until(lambda d: add_employee_page.is_add_employee_page())\n        assert add_employee_page.is_add_employee_page(), \"⚠ Failed to navigate to Add Employee\"\n    \n        # --- FILL EMPLOYEE DETAILS ---\n        first_name = TestDataGenerator.generate_random_string(6)\n        last_name = TestDataGenerator.generate_random_string(8)\n        add_employee_page.fill_basic_employee_details(first_name, last_name)\n    \n        # --- READ AUTO-GENERATED EMPLOYEE ID ---\n        EMPLOYEE_ID_INPUT = (By.ID, \"employeeId\")\n>       WebDriverWait(driver, 15).until(EC.visibility_of_element_located(EMPLOYEE_ID_INPUT))\n\ntests\\PIM\\test_auto_generated_employee_id.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4195fab27a0a240623aa351e2be4fab9\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x00000216AF5FDBC0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0xd2c333+65459]\nE       \tGetHandleVerifier [0x0xd2c374+65524]\nE       \t(No symbol) [0x0xb4d973]\nE       \t(No symbol) [0x0xb976e7]\nE       \t(No symbol) [0x0xb97a8b]\nE       \t(No symbol) [0x0xbddea2]\nE       \t(No symbol) [0x0xbb9e44]\nE       \t(No symbol) [0x0xbdb606]\nE       \t(No symbol) [0x0xbb9bf6]\nE       \t(No symbol) [0x0xb8b38e]\nE       \t(No symbol) [0x0xb8c274]\nE       \tGetHandleVerifier [0x0xfaeda3+2697763]\nE       \tGetHandleVerifier [0x0xfa9ec7+2677575]\nE       \tGetHandleVerifier [0x0xd54194+228884]\nE       \tGetHandleVerifier [0x0xd449f8+165496]\nE       \tGetHandleVerifier [0x0xd4b18d+192013]\nE       \tGetHandleVerifier [0x0xd347d8+99416]\nE       \tGetHandleVerifier [0x0xd34972+99826]\nE       \tGetHandleVerifier [0x0xd1ebea+10346]\nE       \tBaseThreadInitThunk [0x0x76307ba9+25]\nE       \tRtlInitializeExceptionChain [0x0x7788c2eb+107]\nE       \tRtlClearBits [0x0x7788c26f+191]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "log", "source": "90eb5dec-cb30-42e6-b55a-25af0e65cc90-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "1c6c03af-9a24-4c61-a54a-0cbea89bbe08-attachment.txt", "type": "text/plain"}], "start": 1759834057291, "stop": 1759834092511, "uuid": "0a3aa72f-4bf8-413b-b88e-2e3cf38ec5a4", "historyId": "f8a8d723d1590adf729953841ec0d890", "testCaseId": "f8a8d723d1590adf729953841ec0d890", "fullName": "tests.PIM.test_auto_generated_employee_id.TestEmployeeAddition#test_auto_generated_employee_id", "labels": [{"name": "parentSuite", "value": "tests.PIM"}, {"name": "suite", "value": "test_auto_generated_employee_id"}, {"name": "subSuite", "value": "TestEmployeeAddition"}, {"name": "host", "value": "LAPTOP-AQ7JHBIL"}, {"name": "thread", "value": "12908-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.PIM.test_auto_generated_employee_id"}], "titlePath": ["tests", "PIM", "test_auto_generated_employee_id.py", "TestEmployeeAddition"]}