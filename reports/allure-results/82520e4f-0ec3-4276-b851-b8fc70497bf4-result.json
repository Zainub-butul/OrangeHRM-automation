{"name": "test_create_leave_type_and_assign_entitlement", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x30fea3+66515]\n\tGetHandleVerifier [0x0x30fee4+66580]\n\t(No symbol) [0x0xfdc48]\n\t(No symbol) [0x0x148704]\n\t(No symbol) [0x0x148aab]\n\t(No symbol) [0x0x18f482]\n\t(No symbol) [0x0x16b214]\n\t(No symbol) [0x0x18cba7]\n\t(No symbol) [0x0x16afc6]\n\t(No symbol) [0x0x13c2ca]\n\t(No symbol) [0x0x13d154]\n\tGetHandleVerifier [0x0x5673d3+2521347]\n\tGetHandleVerifier [0x0x562353+2500739]\n\tGetHandleVerifier [0x0x337cf4+229924]\n\tGetHandleVerifier [0x0x328258+165768]\n\tGetHandleVerifier [0x0x32ed0d+193085]\n\tGetHandleVerifier [0x0x3181b8+100072]\n\tGetHandleVerifier [0x0x318350+100480]\n\tGetHandleVerifier [0x0x30260a+11066]\n\tBaseThreadInitThunk [0x0x76307ba9+25]\n\tRtlInitializeExceptionChain [0x0x7788c2eb+107]\n\tRtlClearBits [0x0x7788c26f+191]\n\t(No symbol) [0x0]", "trace": "self = <tests.Leave.test_admin_create_leave.TestAdminLeave object at 0x000001CDAD5FE990>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4dbe70da115148db7c2797ef96b5c550\")>\n\n    def test_create_leave_type_and_assign_entitlement(self, driver):\n        login = LoginPage(driver)\n        leave_admin = LeaveAdminPage(driver)\n    \n        # Step 1: Login as Admin\n        logger.info(\"Starting test: Create Leave Type and Assign Entitlement\")\n        logger.info(f\"Logging in as Admin: {Config.USERNAME}\")\n        login.login(Config.USERNAME, Config.PASSWORD)\n        logger.info(\"Login successful.\")\n    \n        # Step 2: Navigate & Add Leave Type\n        logger.info(\"Navigating to Leave Types page.\")\n        leave_admin.navigate_to_leave_types()\n        logger.info(\"Adding new leave type: 'happy Leave'\")\n        toast_message = leave_admin.add_leave_type(\"happy Leave\")\n        logger.info(f\"Leave type creation toast message: '{toast_message}'\")\n        assert \"Successfully Saved\" in toast_message or \"successfully\" in toast_message.lower()\n        logger.info(\"Leave type added successfully.\")\n    \n        # Step 3: Assign Entitlement to Employee\n        logger.info(\"Assigning entitlement to employee 'John A doe'.\")\n>       entitlement_msg = leave_admin.add_entitlement(\"John A Doe\", \"happy Leave\", 10)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\Leave\\test_admin_create_leave.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\leave_admin_page.py:84: in add_entitlement\n    self.wait.until(EC.element_to_be_clickable(self.EMPLOYEE_OPTION)).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4dbe70da115148db7c2797ef96b5c550\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001CDAD697560>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x30fea3+66515]\nE       \tGetHandleVerifier [0x0x30fee4+66580]\nE       \t(No symbol) [0x0xfdc48]\nE       \t(No symbol) [0x0x148704]\nE       \t(No symbol) [0x0x148aab]\nE       \t(No symbol) [0x0x18f482]\nE       \t(No symbol) [0x0x16b214]\nE       \t(No symbol) [0x0x18cba7]\nE       \t(No symbol) [0x0x16afc6]\nE       \t(No symbol) [0x0x13c2ca]\nE       \t(No symbol) [0x0x13d154]\nE       \tGetHandleVerifier [0x0x5673d3+2521347]\nE       \tGetHandleVerifier [0x0x562353+2500739]\nE       \tGetHandleVerifier [0x0x337cf4+229924]\nE       \tGetHandleVerifier [0x0x328258+165768]\nE       \tGetHandleVerifier [0x0x32ed0d+193085]\nE       \tGetHandleVerifier [0x0x3181b8+100072]\nE       \tGetHandleVerifier [0x0x318350+100480]\nE       \tGetHandleVerifier [0x0x30260a+11066]\nE       \tBaseThreadInitThunk [0x0x76307ba9+25]\nE       \tRtlInitializeExceptionChain [0x0x7788c2eb+107]\nE       \tRtlClearBits [0x0x7788c26f+191]\nE       \t(No symbol) [0x0]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "log", "source": "ea5a1c1f-721c-421a-85d8-3096d7cb2ce0-attachment.txt", "type": "text/plain"}], "start": 1760336337899, "stop": 1760336369840, "uuid": "2206b806-e28c-4045-a2bf-4e6a58434a9f", "historyId": "cb758ddbdf2cb78ddee60a0dbaffb300", "testCaseId": "cb758ddbdf2cb78ddee60a0dbaffb300", "fullName": "tests.Leave.test_admin_create_leave.TestAdminLeave#test_create_leave_type_and_assign_entitlement", "labels": [{"name": "parentSuite", "value": "tests.Leave"}, {"name": "suite", "value": "test_admin_create_leave"}, {"name": "subSuite", "value": "TestAdminLeave"}, {"name": "host", "value": "LAPTOP-AQ7JHBIL"}, {"name": "thread", "value": "12460-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Leave.test_admin_create_leave"}], "titlePath": ["tests", "Leave", "test_admin_create_leave.py", "TestAdminLeave"]}