{"uid":"7fb7ab25537c463f","name":"test_add_employee_with_login_credentials","fullName":"tests.PIM.test_add_employee_with_login_credentials.TestEmployeeAddition#test_add_employee_with_login_credentials","historyId":"706c1841b54fc934ef8fac3ca20caf69","time":{"start":1759784388231,"stop":1759784407611,"duration":19380},"status":"failed","statusMessage":"AssertionError: ⚠ Employee was not saved successfully\nassert False\n +  where False = is_employee_saved_successfully()\n +    where is_employee_saved_successfully = <pages.add_employee_page.AddEmployeePage object at 0x000002750943EFD0>.is_employee_saved_successfully","statusTrace":"self = <tests.PIM.test_add_employee_with_login_credentials.TestEmployeeAddition object at 0x000002750943C550>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7a6f2d61cde534c28806640c30e3cbfb\")>\n\n    def test_add_employee_with_login_credentials(self, driver):\n        print(\"\\n>>> Test: Add Employee with Login Credentials\")\n        login_page = LoginPage(driver)\n        dashboard_page = DashboardPage(driver)\n        pim_page = PIMPage(driver)\n        add_employee_page = AddEmployeePage(driver)\n    \n        login_page.login(Config.USERNAME, Config.PASSWORD)\n        dashboard_page.navigate_to_pim()\n        pim_page.navigate_to_add_employee()\n    \n        first_name = TestDataGenerator.generate_random_string(6)\n        last_name = TestDataGenerator.generate_random_string(8)\n        username = f\"user_{TestDataGenerator.generate_random_string(5)}\"\n        password = \"TestPass123!\"\n        print(f\">>> Employee details: {first_name} {last_name}, username: {username}\")\n    \n        add_employee_page.fill_basic_employee_details(first_name, last_name)\n        add_employee_page.fill_login_details(username, password, \"Enabled\")\n        employee_id = add_employee_page.get_employee_id()\n        add_employee_page.save_employee()\n    \n>       assert add_employee_page.is_employee_saved_successfully(), \"⚠ Employee was not saved successfully\"\nE       AssertionError: ⚠ Employee was not saved successfully\nE       assert False\nE        +  where False = is_employee_saved_successfully()\nE        +    where is_employee_saved_successfully = <pages.add_employee_page.AddEmployeePage object at 0x000002750943EFD0>.is_employee_saved_successfully\n\ntests\\PIM\\test_add_employee_with_login_credentials.py:39: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver_setup","time":{"start":1759784138532,"stop":1759784149747,"duration":11215},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"driver","time":{"start":1759784387255,"stop":1759784388230,"duration":975},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: ⚠ Employee was not saved successfully\nassert False\n +  where False = is_employee_saved_successfully()\n +    where is_employee_saved_successfully = <pages.add_employee_page.AddEmployeePage object at 0x000002750943EFD0>.is_employee_saved_successfully","statusTrace":"self = <tests.PIM.test_add_employee_with_login_credentials.TestEmployeeAddition object at 0x000002750943C550>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7a6f2d61cde534c28806640c30e3cbfb\")>\n\n    def test_add_employee_with_login_credentials(self, driver):\n        print(\"\\n>>> Test: Add Employee with Login Credentials\")\n        login_page = LoginPage(driver)\n        dashboard_page = DashboardPage(driver)\n        pim_page = PIMPage(driver)\n        add_employee_page = AddEmployeePage(driver)\n    \n        login_page.login(Config.USERNAME, Config.PASSWORD)\n        dashboard_page.navigate_to_pim()\n        pim_page.navigate_to_add_employee()\n    \n        first_name = TestDataGenerator.generate_random_string(6)\n        last_name = TestDataGenerator.generate_random_string(8)\n        username = f\"user_{TestDataGenerator.generate_random_string(5)}\"\n        password = \"TestPass123!\"\n        print(f\">>> Employee details: {first_name} {last_name}, username: {username}\")\n    \n        add_employee_page.fill_basic_employee_details(first_name, last_name)\n        add_employee_page.fill_login_details(username, password, \"Enabled\")\n        employee_id = add_employee_page.get_employee_id()\n        add_employee_page.save_employee()\n    \n>       assert add_employee_page.is_employee_saved_successfully(), \"⚠ Employee was not saved successfully\"\nE       AssertionError: ⚠ Employee was not saved successfully\nE       assert False\nE        +  where False = is_employee_saved_successfully()\nE        +    where is_employee_saved_successfully = <pages.add_employee_page.AddEmployeePage object at 0x000002750943EFD0>.is_employee_saved_successfully\n\ntests\\PIM\\test_add_employee_with_login_credentials.py:39: AssertionError","steps":[],"attachments":[{"uid":"b7ebdc0845528348","name":"log","source":"b7ebdc0845528348.txt","type":"text/plain","size":585},{"uid":"877b8df915a1e220","name":"stdout","source":"877b8df915a1e220.txt","type":"text/plain","size":609}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"driver::0","time":{"start":1759784407904,"stop":1759784407957,"duration":53},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"driver_setup::0","time":{"start":1759784726226,"stop":1759784730479,"duration":4253},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"parentSuite","value":"tests.PIM"},{"name":"suite","value":"test_add_employee_with_login_credentials"},{"name":"subSuite","value":"TestEmployeeAddition"},{"name":"host","value":"LAPTOP-AQ7JHBIL"},{"name":"thread","value":"10232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.PIM.test_add_employee_with_login_credentials"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"7fb7ab25537c463f.json","parameterValues":[]}