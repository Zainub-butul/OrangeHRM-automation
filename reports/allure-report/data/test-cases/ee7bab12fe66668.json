{"uid":"ee7bab12fe66668","name":"test_auto_generated_employee_id","fullName":"tests.PIM.test_auto_generated_employee_id.TestEmployeeAddition#test_auto_generated_employee_id","historyId":"f8a8d723d1590adf729953841ec0d890","time":{"start":1759831093465,"stop":1759831130004,"duration":36539},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x90c333+65459]\n\tGetHandleVerifier [0x0x90c374+65524]\n\t(No symbol) [0x0x72d973]\n\t(No symbol) [0x0x7776e7]\n\t(No symbol) [0x0x777a8b]\n\t(No symbol) [0x0x7bdea2]\n\t(No symbol) [0x0x799e44]\n\t(No symbol) [0x0x7bb606]\n\t(No symbol) [0x0x799bf6]\n\t(No symbol) [0x0x76b38e]\n\t(No symbol) [0x0x76c274]\n\tGetHandleVerifier [0x0xb8eda3+2697763]\n\tGetHandleVerifier [0x0xb89ec7+2677575]\n\tGetHandleVerifier [0x0x934194+228884]\n\tGetHandleVerifier [0x0x9249f8+165496]\n\tGetHandleVerifier [0x0x92b18d+192013]\n\tGetHandleVerifier [0x0x9147d8+99416]\n\tGetHandleVerifier [0x0x914972+99826]\n\tGetHandleVerifier [0x0x8febea+10346]\n\tBaseThreadInitThunk [0x0x76307ba9+25]\n\tRtlInitializeExceptionChain [0x0x7788c2eb+107]\n\tRtlClearBits [0x0x7788c26f+191]","statusTrace":"self = <tests.PIM.test_auto_generated_employee_id.TestEmployeeAddition object at 0x000001AAB45AF9D0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"828ee0707c353c94172d53db21917976\")>\n\n    def test_auto_generated_employee_id(self, driver):\n        print(\"\\n>>> Test: Verify Auto-Generated Employee ID\")\n    \n        login_page = LoginPage(driver)\n        dashboard_page = DashboardPage(driver)\n        pim_page = PIMPage(driver)\n        add_employee_page = AddEmployeePage(driver)\n    \n        # --- LOGIN ---\n        login_page.login(Config.USERNAME, Config.PASSWORD)\n    \n        # Wait for dashboard to load\n        WebDriverWait(driver, 15).until(\n            lambda d: dashboard_page.is_dashboard_displayed()\n        )\n        assert dashboard_page.is_dashboard_displayed(), \"⚠ Login failed\"\n    \n        # --- NAVIGATE TO ADD EMPLOYEE ---\n        dashboard_page.navigate_to_pim()\n        WebDriverWait(driver, 15).until(\n            lambda d: pim_page.is_pim_page()\n        )\n        assert pim_page.is_pim_page(), \"⚠ Failed to navigate to PIM\"\n    \n        pim_page.navigate_to_add_employee()\n        WebDriverWait(driver, 15).until(\n            lambda d: add_employee_page.is_add_employee_page()\n        )\n        assert add_employee_page.is_add_employee_page(), \"⚠ Failed to navigate to Add Employee\"\n    \n        # --- FILL EMPLOYEE DETAILS ---\n        first_name = TestDataGenerator.generate_random_string(6)\n        last_name = TestDataGenerator.generate_random_string(8)\n        add_employee_page.fill_basic_employee_details(first_name, last_name)\n    \n        # --- WAIT FOR EMPLOYEE ID FIELD ---\n        # Replace the locator below with the actual locator of the Employee ID input\n        EMPLOYEE_ID_LOCATOR = (By.ID, \"employeeId\")\n    \n>       WebDriverWait(driver, 15).until(\n            EC.visibility_of_element_located(EMPLOYEE_ID_LOCATOR)\n        )\n\ntests\\PIM\\test_auto_generated_employee_id.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"828ee0707c353c94172d53db21917976\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001AAB4649B20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x90c333+65459]\nE       \tGetHandleVerifier [0x0x90c374+65524]\nE       \t(No symbol) [0x0x72d973]\nE       \t(No symbol) [0x0x7776e7]\nE       \t(No symbol) [0x0x777a8b]\nE       \t(No symbol) [0x0x7bdea2]\nE       \t(No symbol) [0x0x799e44]\nE       \t(No symbol) [0x0x7bb606]\nE       \t(No symbol) [0x0x799bf6]\nE       \t(No symbol) [0x0x76b38e]\nE       \t(No symbol) [0x0x76c274]\nE       \tGetHandleVerifier [0x0xb8eda3+2697763]\nE       \tGetHandleVerifier [0x0xb89ec7+2677575]\nE       \tGetHandleVerifier [0x0x934194+228884]\nE       \tGetHandleVerifier [0x0x9249f8+165496]\nE       \tGetHandleVerifier [0x0x92b18d+192013]\nE       \tGetHandleVerifier [0x0x9147d8+99416]\nE       \tGetHandleVerifier [0x0x914972+99826]\nE       \tGetHandleVerifier [0x0x8febea+10346]\nE       \tBaseThreadInitThunk [0x0x76307ba9+25]\nE       \tRtlInitializeExceptionChain [0x0x7788c2eb+107]\nE       \tRtlClearBits [0x0x7788c26f+191]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver_setup","time":{"start":1759831072107,"stop":1759831085200,"duration":13093},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"driver","time":{"start":1759831085201,"stop":1759831093459,"duration":8258},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x90c333+65459]\n\tGetHandleVerifier [0x0x90c374+65524]\n\t(No symbol) [0x0x72d973]\n\t(No symbol) [0x0x7776e7]\n\t(No symbol) [0x0x777a8b]\n\t(No symbol) [0x0x7bdea2]\n\t(No symbol) [0x0x799e44]\n\t(No symbol) [0x0x7bb606]\n\t(No symbol) [0x0x799bf6]\n\t(No symbol) [0x0x76b38e]\n\t(No symbol) [0x0x76c274]\n\tGetHandleVerifier [0x0xb8eda3+2697763]\n\tGetHandleVerifier [0x0xb89ec7+2677575]\n\tGetHandleVerifier [0x0x934194+228884]\n\tGetHandleVerifier [0x0x9249f8+165496]\n\tGetHandleVerifier [0x0x92b18d+192013]\n\tGetHandleVerifier [0x0x9147d8+99416]\n\tGetHandleVerifier [0x0x914972+99826]\n\tGetHandleVerifier [0x0x8febea+10346]\n\tBaseThreadInitThunk [0x0x76307ba9+25]\n\tRtlInitializeExceptionChain [0x0x7788c2eb+107]\n\tRtlClearBits [0x0x7788c26f+191]","statusTrace":"self = <tests.PIM.test_auto_generated_employee_id.TestEmployeeAddition object at 0x000001AAB45AF9D0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"828ee0707c353c94172d53db21917976\")>\n\n    def test_auto_generated_employee_id(self, driver):\n        print(\"\\n>>> Test: Verify Auto-Generated Employee ID\")\n    \n        login_page = LoginPage(driver)\n        dashboard_page = DashboardPage(driver)\n        pim_page = PIMPage(driver)\n        add_employee_page = AddEmployeePage(driver)\n    \n        # --- LOGIN ---\n        login_page.login(Config.USERNAME, Config.PASSWORD)\n    \n        # Wait for dashboard to load\n        WebDriverWait(driver, 15).until(\n            lambda d: dashboard_page.is_dashboard_displayed()\n        )\n        assert dashboard_page.is_dashboard_displayed(), \"⚠ Login failed\"\n    \n        # --- NAVIGATE TO ADD EMPLOYEE ---\n        dashboard_page.navigate_to_pim()\n        WebDriverWait(driver, 15).until(\n            lambda d: pim_page.is_pim_page()\n        )\n        assert pim_page.is_pim_page(), \"⚠ Failed to navigate to PIM\"\n    \n        pim_page.navigate_to_add_employee()\n        WebDriverWait(driver, 15).until(\n            lambda d: add_employee_page.is_add_employee_page()\n        )\n        assert add_employee_page.is_add_employee_page(), \"⚠ Failed to navigate to Add Employee\"\n    \n        # --- FILL EMPLOYEE DETAILS ---\n        first_name = TestDataGenerator.generate_random_string(6)\n        last_name = TestDataGenerator.generate_random_string(8)\n        add_employee_page.fill_basic_employee_details(first_name, last_name)\n    \n        # --- WAIT FOR EMPLOYEE ID FIELD ---\n        # Replace the locator below with the actual locator of the Employee ID input\n        EMPLOYEE_ID_LOCATOR = (By.ID, \"employeeId\")\n    \n>       WebDriverWait(driver, 15).until(\n            EC.visibility_of_element_located(EMPLOYEE_ID_LOCATOR)\n        )\n\ntests\\PIM\\test_auto_generated_employee_id.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"828ee0707c353c94172d53db21917976\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001AAB4649B20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x90c333+65459]\nE       \tGetHandleVerifier [0x0x90c374+65524]\nE       \t(No symbol) [0x0x72d973]\nE       \t(No symbol) [0x0x7776e7]\nE       \t(No symbol) [0x0x777a8b]\nE       \t(No symbol) [0x0x7bdea2]\nE       \t(No symbol) [0x0x799e44]\nE       \t(No symbol) [0x0x7bb606]\nE       \t(No symbol) [0x0x799bf6]\nE       \t(No symbol) [0x0x76b38e]\nE       \t(No symbol) [0x0x76c274]\nE       \tGetHandleVerifier [0x0xb8eda3+2697763]\nE       \tGetHandleVerifier [0x0xb89ec7+2677575]\nE       \tGetHandleVerifier [0x0x934194+228884]\nE       \tGetHandleVerifier [0x0x9249f8+165496]\nE       \tGetHandleVerifier [0x0x92b18d+192013]\nE       \tGetHandleVerifier [0x0x9147d8+99416]\nE       \tGetHandleVerifier [0x0x914972+99826]\nE       \tGetHandleVerifier [0x0x8febea+10346]\nE       \tBaseThreadInitThunk [0x0x76307ba9+25]\nE       \tRtlInitializeExceptionChain [0x0x7788c2eb+107]\nE       \tRtlClearBits [0x0x7788c26f+191]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"b0f6733da96bf81c","name":"log","source":"b0f6733da96bf81c.txt","type":"text/plain","size":1407},{"uid":"33bc27debb86bd0","name":"stdout","source":"33bc27debb86bd0.txt","type":"text/plain","size":631}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"driver::0","time":{"start":1759831131127,"stop":1759831131208,"duration":81},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"driver_setup::0","time":{"start":1759831171339,"stop":1759831178166,"duration":6827},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"parentSuite","value":"tests.PIM"},{"name":"suite","value":"test_auto_generated_employee_id"},{"name":"subSuite","value":"TestEmployeeAddition"},{"name":"host","value":"LAPTOP-AQ7JHBIL"},{"name":"thread","value":"6700-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.PIM.test_auto_generated_employee_id"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"ee7bab12fe66668.json","parameterValues":[]}