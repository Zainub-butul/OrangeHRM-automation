{"uid":"699cb7692cde1106","name":"test_auto_generated_employee_id","fullName":"tests.PIM.test_auto_generated_employee_id.TestEmployeeAddition#test_auto_generated_employee_id","historyId":"f8a8d723d1590adf729953841ec0d890","time":{"start":1759830325374,"stop":1759830364313,"duration":38939},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x46c333+65459]\n\tGetHandleVerifier [0x0x46c374+65524]\n\t(No symbol) [0x0x28d973]\n\t(No symbol) [0x0x2d76e7]\n\t(No symbol) [0x0x2d7a8b]\n\t(No symbol) [0x0x31dea2]\n\t(No symbol) [0x0x2f9e44]\n\t(No symbol) [0x0x31b606]\n\t(No symbol) [0x0x2f9bf6]\n\t(No symbol) [0x0x2cb38e]\n\t(No symbol) [0x0x2cc274]\n\tGetHandleVerifier [0x0x6eeda3+2697763]\n\tGetHandleVerifier [0x0x6e9ec7+2677575]\n\tGetHandleVerifier [0x0x494194+228884]\n\tGetHandleVerifier [0x0x4849f8+165496]\n\tGetHandleVerifier [0x0x48b18d+192013]\n\tGetHandleVerifier [0x0x4747d8+99416]\n\tGetHandleVerifier [0x0x474972+99826]\n\tGetHandleVerifier [0x0x45ebea+10346]\n\tBaseThreadInitThunk [0x0x76307ba9+25]\n\tRtlInitializeExceptionChain [0x0x7788c2eb+107]\n\tRtlClearBits [0x0x7788c26f+191]","statusTrace":"self = <tests.PIM.test_auto_generated_employee_id.TestEmployeeAddition object at 0x000001B1DF74BC50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eef515e12438a83a722039af000764f6\")>\n\n    def test_auto_generated_employee_id(self, driver):\n        print(\"\\n>>> Test: Verify Auto-Generated Employee ID\")\n        login_page = LoginPage(driver)\n        dashboard_page = DashboardPage(driver)\n        pim_page = PIMPage(driver)\n        add_employee_page = AddEmployeePage(driver)\n    \n        login_page.login(Config.USERNAME, Config.PASSWORD)\n        assert dashboard_page.is_dashboard_displayed(), \"⚠ Login failed\"\n        dashboard_page.navigate_to_pim()\n        assert pim_page.is_pim_page(), \"⚠ Failed to navigate to PIM\"\n        pim_page.navigate_to_add_employee()\n        assert add_employee_page.is_add_employee_page(), \"⚠ Failed to navigate to Add Employee\"\n    \n        first_name = TestDataGenerator.generate_random_string(6)\n        last_name = TestDataGenerator.generate_random_string(8)\n        add_employee_page.fill_basic_employee_details(first_name, last_name)\n    \n        WebDriverWait(driver, 5).until(lambda d: add_employee_page.get_employee_id() != \"\")\n        employee_id_before_save = add_employee_page.get_employee_id()\n        print(f\">>> Employee ID before save: {employee_id_before_save}\")\n    \n        add_employee_page.save_employee()\n>       employee_id_after_save = add_employee_page.get_employee_id()\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\PIM\\test_auto_generated_employee_id.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\add_employee_page.py:77: in get_employee_id\n    element = self.find_element(self.EMPLOYEE_ID_INPUT)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npages\\base_page.py:16: in find_element\n    return self.wait.until(EC.presence_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eef515e12438a83a722039af000764f6\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001B1DF7F1BC0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x46c333+65459]\nE       \tGetHandleVerifier [0x0x46c374+65524]\nE       \t(No symbol) [0x0x28d973]\nE       \t(No symbol) [0x0x2d76e7]\nE       \t(No symbol) [0x0x2d7a8b]\nE       \t(No symbol) [0x0x31dea2]\nE       \t(No symbol) [0x0x2f9e44]\nE       \t(No symbol) [0x0x31b606]\nE       \t(No symbol) [0x0x2f9bf6]\nE       \t(No symbol) [0x0x2cb38e]\nE       \t(No symbol) [0x0x2cc274]\nE       \tGetHandleVerifier [0x0x6eeda3+2697763]\nE       \tGetHandleVerifier [0x0x6e9ec7+2677575]\nE       \tGetHandleVerifier [0x0x494194+228884]\nE       \tGetHandleVerifier [0x0x4849f8+165496]\nE       \tGetHandleVerifier [0x0x48b18d+192013]\nE       \tGetHandleVerifier [0x0x4747d8+99416]\nE       \tGetHandleVerifier [0x0x474972+99826]\nE       \tGetHandleVerifier [0x0x45ebea+10346]\nE       \tBaseThreadInitThunk [0x0x76307ba9+25]\nE       \tRtlInitializeExceptionChain [0x0x7788c2eb+107]\nE       \tRtlClearBits [0x0x7788c26f+191]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver_setup","time":{"start":1759830212058,"stop":1759830224264,"duration":12206},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"driver","time":{"start":1759830324002,"stop":1759830325363,"duration":1361},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x46c333+65459]\n\tGetHandleVerifier [0x0x46c374+65524]\n\t(No symbol) [0x0x28d973]\n\t(No symbol) [0x0x2d76e7]\n\t(No symbol) [0x0x2d7a8b]\n\t(No symbol) [0x0x31dea2]\n\t(No symbol) [0x0x2f9e44]\n\t(No symbol) [0x0x31b606]\n\t(No symbol) [0x0x2f9bf6]\n\t(No symbol) [0x0x2cb38e]\n\t(No symbol) [0x0x2cc274]\n\tGetHandleVerifier [0x0x6eeda3+2697763]\n\tGetHandleVerifier [0x0x6e9ec7+2677575]\n\tGetHandleVerifier [0x0x494194+228884]\n\tGetHandleVerifier [0x0x4849f8+165496]\n\tGetHandleVerifier [0x0x48b18d+192013]\n\tGetHandleVerifier [0x0x4747d8+99416]\n\tGetHandleVerifier [0x0x474972+99826]\n\tGetHandleVerifier [0x0x45ebea+10346]\n\tBaseThreadInitThunk [0x0x76307ba9+25]\n\tRtlInitializeExceptionChain [0x0x7788c2eb+107]\n\tRtlClearBits [0x0x7788c26f+191]","statusTrace":"self = <tests.PIM.test_auto_generated_employee_id.TestEmployeeAddition object at 0x000001B1DF74BC50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eef515e12438a83a722039af000764f6\")>\n\n    def test_auto_generated_employee_id(self, driver):\n        print(\"\\n>>> Test: Verify Auto-Generated Employee ID\")\n        login_page = LoginPage(driver)\n        dashboard_page = DashboardPage(driver)\n        pim_page = PIMPage(driver)\n        add_employee_page = AddEmployeePage(driver)\n    \n        login_page.login(Config.USERNAME, Config.PASSWORD)\n        assert dashboard_page.is_dashboard_displayed(), \"⚠ Login failed\"\n        dashboard_page.navigate_to_pim()\n        assert pim_page.is_pim_page(), \"⚠ Failed to navigate to PIM\"\n        pim_page.navigate_to_add_employee()\n        assert add_employee_page.is_add_employee_page(), \"⚠ Failed to navigate to Add Employee\"\n    \n        first_name = TestDataGenerator.generate_random_string(6)\n        last_name = TestDataGenerator.generate_random_string(8)\n        add_employee_page.fill_basic_employee_details(first_name, last_name)\n    \n        WebDriverWait(driver, 5).until(lambda d: add_employee_page.get_employee_id() != \"\")\n        employee_id_before_save = add_employee_page.get_employee_id()\n        print(f\">>> Employee ID before save: {employee_id_before_save}\")\n    \n        add_employee_page.save_employee()\n>       employee_id_after_save = add_employee_page.get_employee_id()\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\PIM\\test_auto_generated_employee_id.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\add_employee_page.py:77: in get_employee_id\n    element = self.find_element(self.EMPLOYEE_ID_INPUT)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npages\\base_page.py:16: in find_element\n    return self.wait.until(EC.presence_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eef515e12438a83a722039af000764f6\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001B1DF7F1BC0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x46c333+65459]\nE       \tGetHandleVerifier [0x0x46c374+65524]\nE       \t(No symbol) [0x0x28d973]\nE       \t(No symbol) [0x0x2d76e7]\nE       \t(No symbol) [0x0x2d7a8b]\nE       \t(No symbol) [0x0x31dea2]\nE       \t(No symbol) [0x0x2f9e44]\nE       \t(No symbol) [0x0x31b606]\nE       \t(No symbol) [0x0x2f9bf6]\nE       \t(No symbol) [0x0x2cb38e]\nE       \t(No symbol) [0x0x2cc274]\nE       \tGetHandleVerifier [0x0x6eeda3+2697763]\nE       \tGetHandleVerifier [0x0x6e9ec7+2677575]\nE       \tGetHandleVerifier [0x0x494194+228884]\nE       \tGetHandleVerifier [0x0x4849f8+165496]\nE       \tGetHandleVerifier [0x0x48b18d+192013]\nE       \tGetHandleVerifier [0x0x4747d8+99416]\nE       \tGetHandleVerifier [0x0x474972+99826]\nE       \tGetHandleVerifier [0x0x45ebea+10346]\nE       \tBaseThreadInitThunk [0x0x76307ba9+25]\nE       \tRtlInitializeExceptionChain [0x0x7788c2eb+107]\nE       \tRtlClearBits [0x0x7788c26f+191]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"49be75986d66ac60","name":"log","source":"49be75986d66ac60.txt","type":"text/plain","size":671},{"uid":"34994910a50e5881","name":"stdout","source":"34994910a50e5881.txt","type":"text/plain","size":603}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"driver::0","time":{"start":1759830365260,"stop":1759830365340,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"driver_setup::0","time":{"start":1759830388888,"stop":1759830418014,"duration":29126},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"parentSuite","value":"tests.PIM"},{"name":"suite","value":"test_auto_generated_employee_id"},{"name":"subSuite","value":"TestEmployeeAddition"},{"name":"host","value":"LAPTOP-AQ7JHBIL"},{"name":"thread","value":"3160-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.PIM.test_auto_generated_employee_id"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"699cb7692cde1106.json","parameterValues":[]}