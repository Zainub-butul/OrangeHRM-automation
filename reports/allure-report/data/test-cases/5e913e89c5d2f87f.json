{"uid":"5e913e89c5d2f87f","name":"test_add_vacancy","fullName":"tests.Recruitment.test_vacancy#test_add_vacancy","historyId":"2958f09b4f2b97223f008fdc5f610099","time":{"start":1759830368207,"stop":1759830388166,"duration":19959},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x46c333+65459]\n\tGetHandleVerifier [0x0x46c374+65524]\n\t(No symbol) [0x0x28d973]\n\t(No symbol) [0x0x2d76e7]\n\t(No symbol) [0x0x2d7a8b]\n\t(No symbol) [0x0x31dea2]\n\t(No symbol) [0x0x2f9e44]\n\t(No symbol) [0x0x31b606]\n\t(No symbol) [0x0x2f9bf6]\n\t(No symbol) [0x0x2cb38e]\n\t(No symbol) [0x0x2cc274]\n\tGetHandleVerifier [0x0x6eeda3+2697763]\n\tGetHandleVerifier [0x0x6e9ec7+2677575]\n\tGetHandleVerifier [0x0x494194+228884]\n\tGetHandleVerifier [0x0x4849f8+165496]\n\tGetHandleVerifier [0x0x48b18d+192013]\n\tGetHandleVerifier [0x0x4747d8+99416]\n\tGetHandleVerifier [0x0x474972+99826]\n\tGetHandleVerifier [0x0x45ebea+10346]\n\tBaseThreadInitThunk [0x0x76307ba9+25]\n\tRtlInitializeExceptionChain [0x0x7788c2eb+107]\n\tRtlClearBits [0x0x7788c26f+191]","statusTrace":"vacancy_page = <pages.vacancy_page.VacancyPage object at 0x000001B1DF7E0980>\n\n    def test_add_vacancy(vacancy_page):\n        print(\">>> Test: Add Vacancy started\")\n    \n        # Navigate to vacancies\n        print(\">>> Navigating to Vacancies menu\")\n        vacancy_page.navigate_to_vacancies()\n    \n        print(\">>> Clicking Add button\")\n        vacancy_page.click_add()\n    \n        # Fill form\n        print(\">>> Selecting Job Title\")\n        vacancy_page.select_job_title(\"QA Engineer\")  # must exist in dropdown\n    \n        print(\">>> Entering Vacancy Name\")\n        vacancy_page.enter_vacancy_name(\"Automation Tester Vacancy\")\n    \n        print(\">>> Entering Hiring Manager\")\n        vacancy_page.enter_hiring_manager(\"Linda Anderson\")  # valid HR name in demo site\n    \n        print(\">>> Saving vacancy\")\n        vacancy_page.save_vacancy()\n    \n        # Assert vacancy added → e.g. check success toast or vacancy listed\n        try:\n            print(\">>> Verifying success message\")\n>           success_message = vacancy_page.wait.until(\n                EC.visibility_of_element_located(\n                    (By.XPATH, \"//div[contains(@class,'oxd-toast-content-text') and text()='Success']\")\n                )\n            )\n\ntests\\Recruitment\\test_vacancy.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eef515e12438a83a722039af000764f6\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001B1DF7F2B60>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x46c333+65459]\nE       \tGetHandleVerifier [0x0x46c374+65524]\nE       \t(No symbol) [0x0x28d973]\nE       \t(No symbol) [0x0x2d76e7]\nE       \t(No symbol) [0x0x2d7a8b]\nE       \t(No symbol) [0x0x31dea2]\nE       \t(No symbol) [0x0x2f9e44]\nE       \t(No symbol) [0x0x31b606]\nE       \t(No symbol) [0x0x2f9bf6]\nE       \t(No symbol) [0x0x2cb38e]\nE       \t(No symbol) [0x0x2cc274]\nE       \tGetHandleVerifier [0x0x6eeda3+2697763]\nE       \tGetHandleVerifier [0x0x6e9ec7+2677575]\nE       \tGetHandleVerifier [0x0x494194+228884]\nE       \tGetHandleVerifier [0x0x4849f8+165496]\nE       \tGetHandleVerifier [0x0x48b18d+192013]\nE       \tGetHandleVerifier [0x0x4747d8+99416]\nE       \tGetHandleVerifier [0x0x474972+99826]\nE       \tGetHandleVerifier [0x0x45ebea+10346]\nE       \tBaseThreadInitThunk [0x0x76307ba9+25]\nE       \tRtlInitializeExceptionChain [0x0x7788c2eb+107]\nE       \tRtlClearBits [0x0x7788c26f+191]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver_setup","time":{"start":1759830212058,"stop":1759830224264,"duration":12206},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"driver","time":{"start":1759830365368,"stop":1759830366985,"duration":1617},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"login_valid","time":{"start":1759830366985,"stop":1759830368205,"duration":1220},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"vacancy_page","time":{"start":1759830368205,"stop":1759830368205,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x46c333+65459]\n\tGetHandleVerifier [0x0x46c374+65524]\n\t(No symbol) [0x0x28d973]\n\t(No symbol) [0x0x2d76e7]\n\t(No symbol) [0x0x2d7a8b]\n\t(No symbol) [0x0x31dea2]\n\t(No symbol) [0x0x2f9e44]\n\t(No symbol) [0x0x31b606]\n\t(No symbol) [0x0x2f9bf6]\n\t(No symbol) [0x0x2cb38e]\n\t(No symbol) [0x0x2cc274]\n\tGetHandleVerifier [0x0x6eeda3+2697763]\n\tGetHandleVerifier [0x0x6e9ec7+2677575]\n\tGetHandleVerifier [0x0x494194+228884]\n\tGetHandleVerifier [0x0x4849f8+165496]\n\tGetHandleVerifier [0x0x48b18d+192013]\n\tGetHandleVerifier [0x0x4747d8+99416]\n\tGetHandleVerifier [0x0x474972+99826]\n\tGetHandleVerifier [0x0x45ebea+10346]\n\tBaseThreadInitThunk [0x0x76307ba9+25]\n\tRtlInitializeExceptionChain [0x0x7788c2eb+107]\n\tRtlClearBits [0x0x7788c26f+191]","statusTrace":"vacancy_page = <pages.vacancy_page.VacancyPage object at 0x000001B1DF7E0980>\n\n    def test_add_vacancy(vacancy_page):\n        print(\">>> Test: Add Vacancy started\")\n    \n        # Navigate to vacancies\n        print(\">>> Navigating to Vacancies menu\")\n        vacancy_page.navigate_to_vacancies()\n    \n        print(\">>> Clicking Add button\")\n        vacancy_page.click_add()\n    \n        # Fill form\n        print(\">>> Selecting Job Title\")\n        vacancy_page.select_job_title(\"QA Engineer\")  # must exist in dropdown\n    \n        print(\">>> Entering Vacancy Name\")\n        vacancy_page.enter_vacancy_name(\"Automation Tester Vacancy\")\n    \n        print(\">>> Entering Hiring Manager\")\n        vacancy_page.enter_hiring_manager(\"Linda Anderson\")  # valid HR name in demo site\n    \n        print(\">>> Saving vacancy\")\n        vacancy_page.save_vacancy()\n    \n        # Assert vacancy added → e.g. check success toast or vacancy listed\n        try:\n            print(\">>> Verifying success message\")\n>           success_message = vacancy_page.wait.until(\n                EC.visibility_of_element_located(\n                    (By.XPATH, \"//div[contains(@class,'oxd-toast-content-text') and text()='Success']\")\n                )\n            )\n\ntests\\Recruitment\\test_vacancy.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eef515e12438a83a722039af000764f6\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001B1DF7F2B60>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x46c333+65459]\nE       \tGetHandleVerifier [0x0x46c374+65524]\nE       \t(No symbol) [0x0x28d973]\nE       \t(No symbol) [0x0x2d76e7]\nE       \t(No symbol) [0x0x2d7a8b]\nE       \t(No symbol) [0x0x31dea2]\nE       \t(No symbol) [0x0x2f9e44]\nE       \t(No symbol) [0x0x31b606]\nE       \t(No symbol) [0x0x2f9bf6]\nE       \t(No symbol) [0x0x2cb38e]\nE       \t(No symbol) [0x0x2cc274]\nE       \tGetHandleVerifier [0x0x6eeda3+2697763]\nE       \tGetHandleVerifier [0x0x6e9ec7+2677575]\nE       \tGetHandleVerifier [0x0x494194+228884]\nE       \tGetHandleVerifier [0x0x4849f8+165496]\nE       \tGetHandleVerifier [0x0x48b18d+192013]\nE       \tGetHandleVerifier [0x0x4747d8+99416]\nE       \tGetHandleVerifier [0x0x474972+99826]\nE       \tGetHandleVerifier [0x0x45ebea+10346]\nE       \tBaseThreadInitThunk [0x0x76307ba9+25]\nE       \tRtlInitializeExceptionChain [0x0x7788c2eb+107]\nE       \tRtlClearBits [0x0x7788c26f+191]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"faaa8f5512a45673","name":"log","source":"faaa8f5512a45673.txt","type":"text/plain","size":483},{"uid":"e3ae7d92caaaf36a","name":"stdout","source":"e3ae7d92caaaf36a.txt","type":"text/plain","size":1726}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"vacancy_page::0","time":{"start":1759830388536,"stop":1759830388537,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"login_valid::0","time":{"start":1759830388552,"stop":1759830388552,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"driver::0","time":{"start":1759830388562,"stop":1759830388884,"duration":322},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"driver_setup::0","time":{"start":1759830388888,"stop":1759830418014,"duration":29126},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"parentSuite","value":"tests.Recruitment"},{"name":"suite","value":"test_vacancy"},{"name":"host","value":"LAPTOP-AQ7JHBIL"},{"name":"thread","value":"3160-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.Recruitment.test_vacancy"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"5e913e89c5d2f87f.json","parameterValues":[]}