{"name": "test_add_user", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0xd1fea3+66515]\n\tGetHandleVerifier [0x0xd1fee4+66580]\n\t(No symbol) [0x0xb0dc48]\n\t(No symbol) [0x0xb58704]\n\t(No symbol) [0x0xb58aab]\n\t(No symbol) [0x0xb9f482]\n\t(No symbol) [0x0xb7b214]\n\t(No symbol) [0x0xb9cba7]\n\t(No symbol) [0x0xb7afc6]\n\t(No symbol) [0x0xb4c2ca]\n\t(No symbol) [0x0xb4d154]\n\tGetHandleVerifier [0x0xf773d3+2521347]\n\tGetHandleVerifier [0x0xf72353+2500739]\n\tGetHandleVerifier [0x0xd47cf4+229924]\n\tGetHandleVerifier [0x0xd38258+165768]\n\tGetHandleVerifier [0x0xd3ed0d+193085]\n\tGetHandleVerifier [0x0xd281b8+100072]\n\tGetHandleVerifier [0x0xd28350+100480]\n\tGetHandleVerifier [0x0xd1260a+11066]\n\tBaseThreadInitThunk [0x0x76307ba9+25]\n\tRtlInitializeExceptionChain [0x0x7788c2eb+107]\n\tRtlClearBits [0x0x7788c26f+191]", "trace": "admin_page = <pages.admin_page.AdminPage object at 0x000001B5CD30C050>\n\n    def test_add_user(admin_page):\n        \"\"\"Test adding a new user with valid data\"\"\"\n        print(\">>> Test: Add User started\")\n    \n        # Navigate to Admin module\n        print(\">>> Navigating to Admin module\")\n        admin_page.navigate_to_admin()\n    \n        print(\">>> Clicking Add button\")\n        admin_page.click_add_button()\n    \n        # Generate unique username\n        unique_username = f\"testuser_{int(time.time())}\"\n        password = \"Test@123\"\n        print(f\">>> Generated unique username: {unique_username}\")\n    \n        # Fill form\n        print(\">>> Selecting User Role: ESS\")\n        admin_page.select_user_role(\"ESS\")\n    \n        print(\">>> Selecting Employee Name: John Doe\")\n>       admin_page.select_employee_name(\"John Doe\")  # searches and selects first employee\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\Admin\\test_add_user.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\admin_page.py:129: in select_employee_name\n    dropdown_option = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7e54d831941da95af3729060bf862e1f\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001B5CD2DB880>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0xd1fea3+66515]\nE       \tGetHandleVerifier [0x0xd1fee4+66580]\nE       \t(No symbol) [0x0xb0dc48]\nE       \t(No symbol) [0x0xb58704]\nE       \t(No symbol) [0x0xb58aab]\nE       \t(No symbol) [0x0xb9f482]\nE       \t(No symbol) [0x0xb7b214]\nE       \t(No symbol) [0x0xb9cba7]\nE       \t(No symbol) [0x0xb7afc6]\nE       \t(No symbol) [0x0xb4c2ca]\nE       \t(No symbol) [0x0xb4d154]\nE       \tGetHandleVerifier [0x0xf773d3+2521347]\nE       \tGetHandleVerifier [0x0xf72353+2500739]\nE       \tGetHandleVerifier [0x0xd47cf4+229924]\nE       \tGetHandleVerifier [0x0xd38258+165768]\nE       \tGetHandleVerifier [0x0xd3ed0d+193085]\nE       \tGetHandleVerifier [0x0xd281b8+100072]\nE       \tGetHandleVerifier [0x0xd28350+100480]\nE       \tGetHandleVerifier [0x0xd1260a+11066]\nE       \tBaseThreadInitThunk [0x0x76307ba9+25]\nE       \tRtlInitializeExceptionChain [0x0x7788c2eb+107]\nE       \tRtlClearBits [0x0x7788c26f+191]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "description": "Test adding a new user with valid data", "attachments": [{"name": "log", "source": "2fcc230b-d7e4-4661-b352-fe7fbf6be6e6-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "bcfdfc4b-5faa-4d6b-af31-8f6a7c22e55c-attachment.txt", "type": "text/plain"}], "start": 1760335222228, "stop": 1760335255219, "uuid": "49d59f08-3fdd-4a2d-97e0-633e337b69df", "historyId": "348d0d352e469cfe99a6e2ac43806efa", "testCaseId": "348d0d352e469cfe99a6e2ac43806efa", "fullName": "tests.Admin.test_add_user#test_add_user", "labels": [{"name": "parentSuite", "value": "tests.Admin"}, {"name": "suite", "value": "test_add_user"}, {"name": "host", "value": "LAPTOP-AQ7JHBIL"}, {"name": "thread", "value": "7708-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Admin.test_add_user"}], "titlePath": ["tests", "Admin", "test_add_user.py"]}